For those of you wanting to get started with Dandy, Maven is NOT REQUIRED.  You can download the JAR files directly here:

http://nexus.workhabit.com/nexus/content/repositories/releases/org/workhabit/dandy/dandy-api/1.7/dandy-api-1.7.jar

Javadocs for the API are available at:

http://nexus.workhabit.com/dandy/dandy-api/apidocs/index.html

You need Maven only if you're doing contrib to this module or if you are intending to customize Dandy Publisher to suit your needs.

Version 1.7 of the Dandy toolkit

Current Status:
Working implementation of dandy-api.

Build Instructions (only required if you want to hack on the platform. Otherwise, download the JAR above.
------------------

Step 1: Download the Android SDK
Download it from http://developer.android.com/sdk/index.html.

For the purposes of this install, we assume it was extracted at /opt/android-sdk-mac_86.  This installation has
been tested against version 2.1 of the Android SDK on OSX.

In your ~/.bashrc, add the following two lines:

export ANDROID_HOME=/opt/android-sdk
export PATH="$PATH:$ANDROID_HOME/tools"

To activate this change, run:

source ~/.bashrc

Step 2: Download maven

You can get maven from http://maven.apache.org/.  We assume it's installed in /opt/maven.

Add it to your path by modifying .bashrc so the above lines read:

export ANDROID_HOME=/opt/android-sdk-mac_86
export M2_HOME=/opt/maven
export PATH="$PATH:$ANDROID_HOME/tools:$M2_HOME/bin"

Step 3: Build the project

Note: You will need an Android Virtual Device configured.  By default the project looks for an AVD
called "EVO4G."  You can change this in dandy-publisher/pom.xml.

Go to your project directory in terminal (e.g. the directory you found this readme in).

Run:

mvn install

To deploy to your virtual device:

mvn android:deploy

Using with IntelliJ IDEA
------------------------

Make sure you are using at least IDEA 10.0, as it contains bug fixes that allow IDEA and Maven to
coexist on android projects.

Maven will generate the R.java file if you run through mvn install.  If you haven't, IDEA will complain about it.
You can also run mvn generate-sources in the dandy-publisher project to generate this file.

Module configuration:
dandy-api -

Source Folders:
src/main/java

Test source folders:
src/test/java

Excluded Folders:
target

dandy-publisher - Configure the following paths:

Source Folders:
src/main/java
target/generated-sources/r

Excluded Folders:
target/android-classes
target/classes
target/generated-sources/combined-resources
target/generated-sources/extracted-dependencies
target/maven-archiver




TODO: Implement "read it later" functionality.

This works in a test container, but for SQLite on android is throwing invalid constraint exceptions.

TODO: new comment screen

Functionality for save comment works in test container, needs to be implemented in UI for publisher.

TODO: upload file

Ability to attach an image to a node (this is of course pending the ability to actually post a node)

TODO: support for Services 3.x branch and Drupal 7.
